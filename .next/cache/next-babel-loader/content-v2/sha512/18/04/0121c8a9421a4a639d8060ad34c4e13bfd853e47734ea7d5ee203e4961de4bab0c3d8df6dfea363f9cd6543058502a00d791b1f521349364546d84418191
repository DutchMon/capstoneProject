{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport Router from 'next/router';\nimport useSWR from 'swr';\nexport default function useUser() {\n  _s();\n\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$redirectTo = _ref.redirectTo,\n      redirectTo = _ref$redirectTo === void 0 ? false : _ref$redirectTo,\n      _ref$redirectIfFound = _ref.redirectIfFound,\n      redirectIfFound = _ref$redirectIfFound === void 0 ? false : _ref$redirectIfFound;\n\n  var _useSWR = useSWR('/api/user'),\n      user = _useSWR.data,\n      mutateUser = _useSWR.mutate;\n\n  useEffect(function () {\n    // if no redirect needed, just return (example: already on /dashboard)\n    // if user data not yet there (fetch in progress, logged in or not) then don't do anything yet\n    if (!redirectTo || !user) return;\n\n    if ( // If redirectTo is set, redirect if the user was not found.\n    redirectTo && !redirectIfFound && !(user !== null && user !== void 0 && user.isLoggedIn) || redirectIfFound && user !== null && user !== void 0 && user.isLoggedIn) {\n      Router.push(redirectTo);\n    }\n  }, [user, redirectIfFound, redirectTo]);\n  return {\n    user: user,\n    mutateUser: mutateUser\n  };\n}\n\n_s(useUser, \"UBNtihGiG1H7CNIeLmjUCxBowBw=\", false, function () {\n  return [useSWR];\n});","map":{"version":3,"sources":["C:/Users/dutch/Documents/ASU/IFT402/WebApp/DEVELOPMENT/lib/useUser.js"],"names":["useEffect","Router","useSWR","useUser","redirectTo","redirectIfFound","user","data","mutateUser","mutate","isLoggedIn","push"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAEA,eAAe,SAASC,OAAT,GAGP;AAAA;;AAAA,iFAAJ,EAAI;AAAA,6BAFNC,UAEM;AAAA,MAFNA,UAEM,gCAFO,KAEP;AAAA,kCADNC,eACM;AAAA,MADNA,eACM,qCADY,KACZ;;AACN,gBAA2CH,MAAM,CAAC,WAAD,CAAjD;AAAA,MAAcI,IAAd,WAAQC,IAAR;AAAA,MAA4BC,UAA5B,WAAoBC,MAApB;;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACd;AACA;AACA,QAAI,CAACI,UAAD,IAAe,CAACE,IAApB,EAA0B;;AAE1B,SACE;AACCF,IAAAA,UAAU,IAAI,CAACC,eAAf,IAAkC,EAACC,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEI,UAAP,CAAnC,IAECL,eAAe,IAAIC,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAEI,UAJ5B,EAKE;AACAT,MAAAA,MAAM,CAACU,IAAP,CAAYP,UAAZ;AACD;AACF,GAbQ,EAaN,CAACE,IAAD,EAAOD,eAAP,EAAwBD,UAAxB,CAbM,CAAT;AAeA,SAAO;AAAEE,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,UAAU,EAAVA;AAAR,GAAP;AACD;;GAtBuBL,O;UAIqBD,M","sourcesContent":["import { useEffect } from 'react'\nimport Router from 'next/router'\nimport useSWR from 'swr'\n\nexport default function useUser({\n  redirectTo = false,\n  redirectIfFound = false,\n} = {}) {\n  const { data: user, mutate: mutateUser } = useSWR('/api/user')\n\n  useEffect(() => {\n    // if no redirect needed, just return (example: already on /dashboard)\n    // if user data not yet there (fetch in progress, logged in or not) then don't do anything yet\n    if (!redirectTo || !user) return\n\n    if (\n      // If redirectTo is set, redirect if the user was not found.\n      (redirectTo && !redirectIfFound && !user?.isLoggedIn) ||\n      // If redirectIfFound is also set, redirect if the user was found\n      (redirectIfFound && user?.isLoggedIn)\n    ) {\n      Router.push(redirectTo)\n    }\n  }, [user, redirectIfFound, redirectTo])\n\n  return { user, mutateUser }\n}\n"]},"metadata":{},"sourceType":"module"}